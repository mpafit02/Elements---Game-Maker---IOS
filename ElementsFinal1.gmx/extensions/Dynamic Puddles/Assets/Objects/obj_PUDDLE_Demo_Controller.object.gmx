<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This is the demo object created to show off the effect. As such it contains 
// almost no comments about what the scripts do etc... For that you should see the 
// object "obj_PUDDLE_Control", as that is the object that you will be adding into 
// your own game, not this.

scr_PUDDLE_Init(true, 2);

blend = c_red;
spread = 20;
number = 5;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_PUDDLE_Cleanup();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tq = puddle_q;

if keyboard_check_pressed(vk_anykey)
{
switch(keyboard_key)
    {
    case ord("1"): puddle_q = 1; break;
    case ord("2"): puddle_q = 2; break;
    case ord("3"): puddle_q = 3; break;
    case ord("4"): puddle_q = 4; break;
    case ord("5"): puddle_q = 5; break;
    case ord("6"): puddle_q = 6; break;
    case ord("7"): puddle_q = 7; break;
    case ord("8"): puddle_q = 8; break;
    case ord("9"): puddle_q = 9; break;
    case ord("0"): puddle_q = 10; break;
    case vk_enter:
        if puddle_on
            {
            puddle_on = false;
            scr_PUDDLE_Cleanup();
            }
        else
            {
            puddle_on = true;
            scr_PUDDLE_Init(puddle_on, puddle_q);
            }
        break;
    case vk_space: scr_PUDDLE_Clear(); break;
    case vk_add: number++; break;
    case vk_subtract: number--; if number &lt; 1 number = 1; break;
    }
}

if puddle_q != tq &amp;&amp; puddle_on
{
scr_PUDDLE_Cleanup();
scr_PUDDLE_Init(puddle_on, puddle_q);
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spread--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spread++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(blend)
{
case c_red: blend = c_aqua; break;
case c_aqua: blend = c_lime; break;
case c_lime: blend = c_fuchsia; break;
case c_fuchsia: blend = c_yellow; break;
case c_yellow: blend = c_blue; break;
case c_blue: blend = c_red; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_PUDDLE_Create(mouse_x, mouse_y, 0.25, 1, blend, spread, 0.1, 1 + irandom(number - 1), 0.005);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_PUDDLE_Cleanup();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_PUDDLE_Draw()

draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_font(fnt_PUDDLE_Arial);
draw_text(8, y, "Press LMB to create puddles and RMB to change colour");
draw_text(8, y + 24, "Use the mouse wheel up/down to change the spread amount");
draw_text(8, y + 48, "Use the &lt;+&gt; and &lt;-&gt; keys to increase the number of puddles created");
draw_text(8, y + 72, "Press &lt;SPACE&gt; to clear the screen");
draw_text(8, y + 96, "Press &lt;ENTER&gt; to switch between surface and instance modes");
draw_text(8, y + 120, "Press the number keys (0 - 9) to set the quality (surface only)");

draw_set_halign(fa_right);
draw_text(room_width - 8, y ,string(instance_number(obj_PUDDLE)) + " :Puddle Count");
draw_text(room_width - 8, y + 24, string(spread) + " :Spread");
draw_text(room_width - 8, y + 48, string(number) + " :Number");
switch (blend)
{
case c_red: draw_text(room_width - 8, y + 72,"Blood :Colour"); break;
case c_aqua: draw_text(room_width - 8, y + 72,"Water :Colour"); break;
case c_lime: draw_text(room_width - 8, y + 72,"Slime :Colour"); break;
case c_fuchsia: draw_text(room_width - 8, y + 72,"Ooze :Colour"); break;
case c_yellow: draw_text(room_width - 8, y + 72,"Ichor :Colour"); break;
case c_blue: draw_text(room_width - 8, y + 72,"Dark Water :Colour"); break;
}
if puddle_on
{
draw_text(room_width - 8, y + 96, "Surface Mode On");
}
else
{
draw_text(room_width - 8, y + 96, "Surface Mode Off");
}
draw_text(room_width - 8, y + 120, string(puddle_q) + " :Quality");


draw_circle(mouse_x, mouse_y, spread, true);

draw_text(room_width - 8, y + 144, string(surface_get_width(puddle_surf)) + " / " + string(surface_get_height(puddle_surf)) + " :Surface Size");


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
